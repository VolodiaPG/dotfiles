{{- if eq .chezmoi.os "darwin" -}}

#!/bin/bash

DAEMON_NAME="media-control-mtmr"
SCRIPT_NAME="${DAEMON_NAME}_script"
PLIST_NAME="com.${USER}.${DAEMON_NAME}.plist"
SCRIPT_PATH="${HOME}/${SCRIPT_NAME}"
PLIST_PATH="${HOME}/Library/LaunchAgents/${PLIST_NAME}"
OUTPUT_TITLE_ARTIST_FILE="/tmp/${DAEMON_NAME}_title_artist.txt"
OUTPUT_IMG_FILE="/tmp/${DAEMON_NAME}_img.jpeg"
OUTPUT_ITER_FILE="/tmp/${DAEMON_NAME}_iter.txt"

AGENT_STDOUT_LOG="/tmp/${DAEMON_NAME}.stdout.log"
AGENT_STDERR_LOG="/tmp/${DAEMON_NAME}.stderr.log"

cat <<EOF > "${SCRIPT_PATH}.sh"
#!/opt/homebrew/bin/nu
# Set initial environment variables
\$env.OUTPUT_TITLE_ARTIST_FILE = "${OUTPUT_TITLE_ARTIST_FILE}"
\$env.OUTPUT_IMG_FILE = "${OUTPUT_IMG_FILE=}"
\$env.OUTPUT_ITER_FILE = "${OUTPUT_ITER_FILE=}"
\$env.ITER = "img1"
\$env.TITLE = ""
\$env.OLD_TITLE = ""

mut title = ""
mut oldtitle = ""
mut artist = ""
mut art = ""

loop {
    let content = (/opt/homebrew/bin/media-control get | from json)

    if (\$content | is-not-empty) {
       \$title = (\$content | get title)
       \$artist = (\$content | get artist)
       \$art = (\$content | get artworkData)

       \$art | decode base64 | save -f \$env.OUTPUT_IMG_FILE

       if (\$title != "") {
           \$"(\$title) - (\$artist)" | save -f \$env.OUTPUT_TITLE_ARTIST_FILE
       } else {
           "" | save -f \$env.OUTPUT_TITLE_ARTIST_FILE
       }

       if (\$env.ITER == "img2") {
           \$env.ITER = "img1"
       } else {
           \$env.ITER = "img2"
       }

       if (\$title != \$oldtitle) {
           \$"(\$env.ITER)" | save -f \$env.OUTPUT_ITER_FILE
       }

       \$oldtitle = \$title
    } else {
           "" | save -f \$env.OUTPUT_TITLE_ARTIST_FILE
           "" | save -f \$env.OUTPUT_IMG_FILE
    }

    sleep 1sec
}
EOF

chmod +x "${SCRIPT_PATH}.sh"



mkdir -p "${HOME}/Library/LaunchAgents"
cat <<EOF > "${PLIST_PATH}"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>Label</key>
    <string>com.${USER}.${DAEMON_NAME}</string>
    <key>ProgramArguments</key>
    <array>
        <string>${SCRIPT_PATH}.sh</string>
    </array>
    <key>KeepAlive</key>
    <true/>
    <key>RunAtLoad</key>
    <true/>
    <key>StandardOutPath</key>
    <string>${AGENT_STDOUT_LOG}</string>
    <key>StandardErrorPath</key>
    <string>${AGENT_STDERR_LOG}</string>
</dict>
</plist>
EOF

launchctl unload "${PLIST_PATH}" 2>/dev/null
launchctl load "${PLIST_PATH}"

{{ end -}}
